import telebot
from telebot import types
import sqlite3




# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏–∑ —Ñ–∞–π–ª–∞ config.cfg
with open('config.cfg') as f:
    token = f.readline().strip()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
registered_welcome_message = (
    "üéâ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å, –¥–æ—Ä–æ–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏! üéâ\n\n"
    "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –Ω–∞—à–µ–º —Ñ–∏—Ç–Ω–µ—Å-–±–æ—Ç–µ. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–ü—Ä–æ—Ñ–∏–ª—å\"."
)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
error_auth_message = (
    "üèãÔ∏è‚Äç‚ôÄÔ∏è **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ñ–∏—Ç–Ω–µ—Å-–±–æ—Ç!** üèãÔ∏è‚Äç‚ôÇÔ∏è\n\n"
    "üìå **–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å: "
)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ä–∞—Ü–∏–æ–Ω–µ –ø–∏—Ç–∞–Ω–∏—è
food_ration_message = "—Ä–∞—Ü–∏–æ–Ω –µ–¥—ã —Ö–∑ —á—Ç–æ"

bot = telebot.TeleBot(token)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL

# –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (—Ñ–∞–π–ª my_database.db –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω)
conn = sqlite3.connect('../db.sqlite3', check_same_thread=False)


# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫—É—Ä—Å–æ—Ä–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
cursor = conn.cursor()

@bot.message_handler(commands=['start'])
def start_message(info):
    sql_query = """
                SELECT EXISTS (
                    SELECT 1
                    FROM calculator_user
                    WHERE telegram = ?
                );
            """

    user_id = info.chat.id

    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ user_id –∫ —Å—Ç—Ä–æ–∫–µ
    cursor.execute(sql_query, (str(user_id),))

    result = cursor.fetchone()[0]

    if result:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å")
        item2 = types.KeyboardButton("–ï–¥–∞")
        markup.add(item2)
        markup.add(item1)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(info.chat.id, registered_welcome_message, reply_markup=markup)
    else:
        print (user_id)
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å URL –∫–Ω–æ–ø–∫–æ–π –∏ –∫–Ω–æ–ø–∫–æ–π /start
        markup = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url="https://www.example.com")
        markup.add(url_button)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É /start
        start_button = types.KeyboardButton("/start")

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É /start
        start_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        start_markup.add(start_button)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏
        bot.send_message(info.chat.id, error_auth_message, reply_markup=markup)
        bot.send_message(info.chat.id, "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞:", reply_markup=start_markup)


@bot.message_handler(func=lambda message: message.text.lower() == "–ø—Ä–æ—Ñ–∏–ª—å")
def profile_message(message):
    user_id = message.chat.id
    sql_query = """
                SELECT first_name, last_name, age, sex, current_weight, desired_weight, email
                FROM calculator_user
                WHERE telegram = ?
                """

    cursor.execute(sql_query, (str(user_id),))
    profile_data = cursor.fetchone()

    if profile_data:
        (first_name, last_name, age, sex, current_weight, desired_weight,
         email) = profile_data

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è
        profile_text = (
            f"üë§ –ò–º—è: {first_name} {last_name}\n"
            f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {age}\n"
            f"‚ößÔ∏è –ü–æ–ª: {sex}\n"
            f"‚öñÔ∏è –¢–µ–∫—É—â–∏–π –≤–µ—Å: {current_weight} –∫–≥\n"
            f"üéØ –ñ–µ–ª–∞–µ–º—ã–π –≤–µ—Å: {desired_weight} –∫–≥\n"
            f"üìß Email: {email}\n"
        )

        bot.send_message(message.chat.id, profile_text)
    else:
        bot.send_message(message.chat.id, "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")


@bot.message_handler(func=lambda message: message.text.lower() == "–µ–¥–∞")
def food_message(message):
    bot.send_message(message.chat.id, food_ration_message)

bot.infinity_polling()
